{"version":3,"file":"static/webpack/static/development/pages/person.js.3e1da7b8c31f2de45ba2.hot-update.js","sources":["webpack:///./pages/detail.js","webpack:///./pages/header.js","webpack:///./pages/person.js","webpack:///./pages/publications.js"],"sourcesContent":["import React from 'react'\n\nclass Detail extends React.Component {\n  constructor(props) {\n    super(props)\n\n    if (!this.props.publication) return\n\n    this.publication = Object.assign({}, this.props.publication)\n    this.people = Object.assign([], this.props.people)\n    this.namesId = Object.assign({}, this.props.namesId)\n\n    this.names = this.people.map((person) => person.name )\n    if (this.publication.base) {\n      this.publication.id = this.publication.base.split('.json')[0]\n    }\n    this.getProceedings()\n    this.getVideoEmbed()\n\n\n    this.showFigures = false\n    if (!this.props.short) {\n      this.getFigures()\n      if (this.figures[this.publication.id]) {\n        this.showFigures = true\n      }\n    }\n  }\n\n  getProceedings() {\n    const conference = this.publication.series.slice(0, -5)\n    const year = this.publication.series.slice(-2)\n    this.proceeding = this.props.booktitles[conference]\n    if (!this.proceeding) {\n      this.proceeding = {}\n    }\n    this.proceeding.series = `${conference} '${year}`\n    if (this.publication.pages < 4) {\n      this.proceeding.booktitle = 'Adjunct ' + this.proceeding.booktitle\n    }\n  }\n\n  getVideoEmbed() {\n    if (this.publication.video) {\n      if (this.publication.video.includes('youtube')) {\n        this.publication.embedId = this.publication.video.split('?v=')[1]\n        this.publication.embed = `https://www.youtube.com/embed/${this.publication.embedId}`\n        this.publication.embedThumbnail = `https://img.youtube.com/vi/${this.publication.embedId}/maxresdefault.jpg`\n      }\n      if (this.publication.video.includes('vimeo')) {\n        this.publication.embedId = this.publication.video.split('/')[3]\n        this.publication.embed = `https://player.vimeo.com/video/${this.publication.embedId}`\n        this.publication.embedThumbnail = this.props.vimeo[this.publication.embedId]\n      }\n    }\n  }\n\n  getFigures() {\n    const dirs =\n    this.props.files.children\n    .filter(dir => dir.name === 'images')[0].children\n    .filter(dir => dir.name === 'publications')[0].children\n    .filter(dir => dir.name === 'figures')[0].children\n\n    this.figures = {}\n    for (let dir of dirs) {\n      let id = dir.name\n      let files = dir.children.map(file => file.path )\n      this.figures[id] = files\n    }\n  }\n\n  render() {\n    if (!this.props.publication) {\n      return <div></div>\n    }\n\n    return (\n      <div id=\"publication\">\n        <div className=\"block\">\n          <div id=\"breadcrumb\" className=\"ui breadcrumb\">\n            <a className=\"section\" href=\"/publications\">Publications</a>\n            <i className=\"right angle icon divider\"></i>\n            <a className=\"active section\">{ this.publication.series }</a>\n          </div>\n          <div className=\"ui stackable grid\" style={{ marginTop: '10px' }}>\n            <div className=\"three wide column\" style={{ margin: 'auto' }}>\n              <img className=\"cover\" src={ `/static/images/publications/cover/${ this.publication.id }.jpg` } />\n            </div>\n            <div className=\"thirteen wide column\">\n              { this.props.short &&\n                <h1>\n                  <a href={ `/publications/${this.publication.id}` } target=\"_blank\">{ this.publication.title }</a>\n                </h1>\n              }\n              { !this.props.short &&\n                <h1>{ this.publication.title }</h1>\n              }\n              <p className=\"meta\">\n                { this.publication.authors.map((author) => {\n                    return (\n                      this.names.includes(author) ?\n                      <a href={ `/people/${ this.namesId[author] }` } key={ author }>\n                        <img src={ `/static/images/people/${ this.namesId[author] }.jpg`} className=\"ui circular spaced image mini-profile\" />\n                        <strong>{author}</strong>\n                      </a>\n                      :\n                      <span key={ author }>{author}</span>\n                    )\n                  }).reduce((prev, current) => [prev, ' , ', current])\n                }\n              </p>\n            </div>\n          </div>\n        </div>\n        { this.publication.embed &&\n          <div className=\"block\">\n            <div className=\"video-container\">\n              <iframe\n                className=\"embed\"\n                width=\"100%\"\n                height=\"315\"\n                src={`${this.publication.embed}`}\n                srcDoc={`<style>*{padding:0;margin:0;overflow:hidden}html,body{height:100%}img,span{position:absolute;width:100%;top:0;bottom:0;margin:auto}span{height:1.5em;text-align:center;font:48px/1.5 sans-serif;color:white;text-shadow:0 0 0.5em black}</style><a href=${this.publication.embed}?autoplay=1><img src=${this.publication.embedThumbnail}><span>â–¶</span></a>`}\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen={true}\n                mozallowfullscreen=\"true\"\n                msallowfullscreen=\"true\"\n                oallowfullscreen=\"true\"\n                webkitallowfullscreen=\"true\"\n              ></iframe>\n            </div>\n          </div>\n        }\n        <div className=\"block\">\n          <h1>Abstract</h1>\n          <p>{ this.publication.abstract }</p>\n\n          { this.publication.keywords &&\n            <div className=\"ui labels\">\n              Keywords: &nbsp;\n              { this.publication.keywords.split(', ').map((keyword) => {\n                return <span className=\"ui large grey label\" key={ keyword }>{ keyword }</span>\n              }) }\n            </div>\n          }\n        </div>\n        <div className=\"block\">\n          <h1>Reference</h1>\n          <div className=\"ui segment\">\n            <p style={{ lineHeight: \"160%\" }}>\n              { this.publication.authors.reduce((prev, current) => [prev, ', ', current]) }.&nbsp;\n              <b>{ this.publication.title }</b>.&nbsp;\n              <i>{ `In ${this.proceeding.booktitle} (${ this.proceeding.series })`  }</i>.&nbsp;\n              { this.proceeding.publisher }&nbsp;\n              Page: 1-{ this.publication.pages }.&nbsp;\n              DOI: <a href={ this.publication.doi} target=\"_blank\">{ this.publication.doi }</a>\n            </p>\n          </div>\n        </div>\n        { this.showFigures &&\n          <div className=\"block\">\n            <h1>Figures</h1>\n            <div id=\"figure\">\n              <div className=\"ui stackable three cards\" style={{ marginTop: '30px' }}>\n                { this.figures[this.publication.id].map((src) => {\n                  return (\n                    <a className=\"card\" href={ `/${src}` } target=\"_blank\" >\n                      <div className=\"image\">\n                        <img src={ `/${src}` } />\n                      </div>\n                    </a>\n                  )\n                })}\n              </div>\n            </div>\n          </div>\n        }\n      </div>\n    )\n  }\n\n}\n\nexport default Detail\n","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.items = [\n      'Publications',\n      'People',\n      'Courses',\n      'Facility',\n      'News',\n      'Location'\n    ]\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"ui right vertical sidebar menu\">\n          <a className=\"item\" href=\"/\">Home</a>\n          { this.items.map((item) => {\n            return (\n              <a className={ this.props.current == item ? 'item active' : 'item' } href={ `/${item.toLowerCase()}` } key={ item }>\n                { item }\n              </a>\n            )\n          })}\n        </div>\n\n        <div className=\"ui stackable secondary pointing container menu\" style={{ borderBottom: 'none', marginRight: '15%', fontSize: '1.1em' }}>\n          <div className=\"left menu\">\n            <a className='item' href='/'>\n              <b style={{ color: '#00716C' }}>UCalgary iLab</b>\n            </a>\n          </div>\n          <div className=\"right menu\">\n            { this.items.map((item) => {\n              return (\n                <a className={ this.props.current == item ? 'item active' : 'item' } href={ `/${item.toLowerCase()}` } key={ item }>\n                  { item }\n                </a>\n              )\n            })}\n            <div className=\"toc item\">\n              <a href=\"/\"><b>UCalgary iLab</b></a>\n              <i style={{ float: 'right' }} className=\"sidebar icon\"></i>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Header","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\n\nimport Header from './header'\nimport Publications from './publications'\nimport Footer from './footer'\n\nclass Person extends React.Component {\n  static async getInitialProps(req) {\n    const id = req.query.id\n    return { id: id }\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.person = require(`../content/output/people/${this.props.id}.json`)\n  }\n\n  renderLink(person, key) {\n    if (!person[key]) {\n      return ''\n    }\n\n    let title = person[key].split('/')[3]\n    let href\n    let icon\n    switch(key) {\n      case 'twitter':\n        icon = 'fab fa-twitter fa-fw'\n        break\n      case 'facebook':\n        icon = 'fab fa-facebook-square fa-fw'\n        break\n      case 'github':\n        icon = 'fab fa-github-alt fa-fw'\n        break\n      case 'cv':\n        icon = 'far fa-file fa-fw'\n        break\n      case 'email':\n        title = person[key]\n        icon = 'far fa-envelope fa-fw'\n        break\n      case 'linkedin':\n        title = 'LinkedIn'\n        icon = 'fab fa-linkedin-in fa-fw'\n        break\n    }\n\n    return (\n      <div className=\"item\">\n        <a href={ person[key] } target=\"_blank\" style={{ fontSize: '1.2em' }}>\n          <i className={ icon } />\n          { title }\n        </a>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div>\n        <title>{ `${this.person.name} - Interactions Lab | University of Calgary HCI Group` }</title>\n\n        <Header current=\"People\" />\n\n        <div className=\"ui stackable grid\">\n          <div className=\"one wide column\"></div>\n          <div className=\"eleven wide column centered\">\n            <div id=\"person\" className=\"category\" style={{ textAlign: 'center' }}>\n              <img className=\"ui circular image large-profile\" src={ `/static/images/people/${this.props.id}.jpg`} style={{ margin: 'auto' }} />\n              <h1>{ this.person.name }</h1>\n              <p>{ this.person.title }</p>\n              { this.person.url &&\n                <p>\n                  <a href={ this.person.url} target=\"_blank\">\n                  <i className=\"fas fa-link fa-fw\"/>{ this.person.url }\n                  </a>\n                </p>\n              }\n              { this.person.scholar &&\n                <p>\n                  <a href={ this.person.scholar} target=\"_blank\">\n                    <i className=\"fas fa-graduation-cap fa-fw\"/>\n                    Google Scholar\n                  </a>\n                </p>\n              }\n              <div class=\"ui horizontal small divided link list\">\n                { ['cv', 'facebook', 'twitter', 'github', 'linkedin', 'email'].map((key) => {\n                  return this.renderLink(this.person, key)\n                }) }\n              </div>\n            </div>\n            <Publications author={ this.person.name } />\n          </div>\n          <div className=\"one wide column\"></div>\n        </div>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default Person\n","import React from 'react'\nimport Detail from './detail'\nimport summary from '../content/output/summary.json'\nimport booktitles from '../content/output/booktitles.json'\nimport files from '../content/output/files.json'\nimport vimeo from '../content/output/vimeo.json'\n\nclass Publications extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      publication: null\n    }\n\n    this.getPublications()\n    this.getPeople()\n\n    if (this.props.short) {\n      this.publications = this.publications.slice(0, 20)\n    }\n    if (this.props.author) {\n      this.publications = this.publications.filter((publication) => {\n        return publication.authors.includes(this.props.author)\n      })\n    }\n  }\n\n  getPublications() {\n    const fileNames = Object.keys(summary.fileMap)\n    const keys = fileNames.filter((fileName) => {\n      return fileName.includes('publications')\n    })\n\n    this.publications = []\n    for (let key of keys) {\n      this.publications.push(summary.fileMap[key])\n    }\n    this.publications = this.publications.sort((a, b) => {\n      return new Date(b.date) - new Date(a.date)\n    })\n  }\n\n  getPeople() {\n    const fileNames = Object.keys(summary.fileMap)\n    const keys = fileNames.filter((fileName) => {\n      return fileName.includes('people')\n    })\n\n    this.people = []\n    for (let key of keys) {\n      let id = key.split('/')[3].replace('.json', '')\n      let person = Object.assign(summary.fileMap[key], { id: id })\n      this.people.push(person)\n    }\n\n    this.names = this.people.map((person) => person.name )\n    this.namesId = {}\n    for (let person of this.people) {\n      this.namesId[person.name] = person.id\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"publications\" className=\"category\">\n        <h1 className=\"ui horizontal divider header\">\n          <i className=\"file alternate outline icon\"></i>\n          { this.props.short ? 'Recent Publications' : 'Publications' }\n        </h1>\n        <div className=\"ui segment\" style={{ marginTop: '50px' }}>\n         { this.publications.map((publication, i) => {\n            publication.id = publication.base.split('.json')[0]\n            return (\n              <div className=\"publication ui vertical segment stackable grid\" data-id={ publication.id } key={ i }>\n                <div className=\"three wide column\" style={{ margin: 'auto' }}>\n                  <img className=\"cover\" src={ `/static/images/publications/cover/${publication.id}.jpg` } />\n                </div>\n                <div className=\"thirteen wide column\">\n                  <p>\n                    <span className=\"ui big inverted teal label\">{ publication.series }</span>\n                    { publication.award &&\n                      <span className=\"ui big label\">\n                      { publication.award === 'Honorable Mention' &&\n                        <b><i className=\"fas fa-award\"></i> Honorable Mention</b>\n                      }\n                      { publication.award === 'Best Paper' &&\n                        <b><i className=\"fas fa-trophy\"></i> Best Paper</b>\n                      }\n                      </span>\n                    }\n                  </p>\n                  <p style={{ fontSize: '1.3em', color: '#00716C' }}>\n                      <b>\n                        { publication.title }\n                      </b>\n                  </p>\n                  <p>\n                    { publication.authors.map((author) => {\n                        return (\n                          this.names.includes(author) ?\n                          <a href={ `/people/${ this.namesId[author] }` } key={ author }>\n                            <img src={ `/static/images/people/${ this.namesId[author] }.jpg`} className=\"ui circular spaced image mini-profile\" />\n                            <span className=\"author-link\">{author}</span>\n                          </a>\n                          :\n                          <span key={ author }>{author}</span>\n                        )\n                      }).reduce((prev, current) => [prev, ' , ', current])\n                    }\n                  </p>\n                </div>\n              </div>\n            ) // publications\n         })}\n        </div>\n\n        <div id=\"publications-modal\">\n         { this.publications.map((publication, i) => {\n            publication.id = publication.base.split('.json')[0]\n            return (\n              <div id={publication.id} className=\"ui large modal\" key={ publication.id }>\n                <div className=\"header\">\n                  <a href={ `/publications/${publication.id}` } target=\"_blank\">\n                    <i className=\"fas fa-link fa-fw\"></i>{`${publication.id}`}\n                  </a>\n                  &nbsp;&nbsp;-&nbsp;&nbsp;\n                  <a href={ `/publications/${publication.id}.pdf` } target=\"_blank\">\n                    <i className=\"far fa-file-pdf fa-fw\"></i> pdf\n                  </a>\n                  <div className=\"actions\" style={{ float: 'right', cursor: 'pointer', color: 'grey' }}>\n                    <i className=\"ui right cancel close icon\">\n                    </i>\n                  </div>\n                </div>\n                <div className=\"content\">\n                  <Detail\n                    publication={ publication }\n                    namesId={ this.namesId }\n                    people={ this.people }\n                    booktitles={ booktitles }\n                    files={ files }\n                    vimeo={ vimeo }\n                    short=\"true\"\n                  />\n                </div>\n                <div className=\"actions\">\n                  <div className=\"ui right cancel button\">\n                    Close\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n\n\n        { this.props.short &&\n          <div className=\"ui vertical segment stackable\" style={{ textAlign: 'center' }}>\n            <a className=\"ui button\" href=\"/publications\">\n              { `+ ${this.publications.length} more publications` }\n            </a>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default Publications\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAxBA;AAwBA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AARA;AAAA;AACA;AADA;AAQA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAaA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAAA;AAMA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAiBA;AAAA;AAKA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAKA;AAAA;AAAA;AAKA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAOA;;;;AAnLA;AACA;AAsLA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzLA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAHA;AAWA;AACA;;;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAlDA;AACA;AAoDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxDA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AACA;;;;;;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAHA;AAIA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AApBA;AACA;AAsBA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAKA;;;AAEA;AAAA;AACA;AAAA;AAIA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AACA;AAAA;AAMA;AAAA;AAAA;AACA;AAAA;AAKA;AAAA;AAEA;AACA;AAGA;AAAA;AAEA;AAAA;AAKA;;;;AA/FA;AACA;AAiGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AADA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAkBA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAPA;AAAA;AACA;AADA;AAOA;AAAA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAPA;AAAA;AACA;AADA;AAOA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AACA;AAYA;AAAA;AAAA;AACA;AACA;AAfA;AAAA;AACA;AADA;AAeA;AAAA;AACA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAkBA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAGA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAOA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAMA;AAGA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AACA;AAAA;AAMA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAOA;;;;AA/JA;AACA;AAiKA;;;;A","sourceRoot":""}