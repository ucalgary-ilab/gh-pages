{"version":3,"file":"static/webpack/static/development/pages/publication.js.3d27d2312d5d2b48cb28.hot-update.js","sources":["webpack:///./pages/publication.js"],"sourcesContent":["import React from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport summary from '../content/output/summary.json'\n\nimport Header from './header'\nimport Publications from './publications'\nimport Footer from './footer'\n\nlet fileNames = Object.keys(summary.fileMap)\nlet keys = fileNames.filter((fileName) => {\n  return fileName.includes('people')\n})\n\nlet people = []\nfor (let key of keys) {\n  people.push(summary.fileMap[key])\n}\nconst namesId = {}\nfor (let person of people) {\n  namesId[person.name] = person.id\n}\n\n\nclass Publication extends React.Component {\n  static async getInitialProps(req) {\n    const id = req.query.id\n    return { id: id }\n  }\n\n  render() {\n    const publication = require(`../content/output/publications/${ this.props.id }.json`)\n    const names = people.map((person) => person.name )\n\n    if (publication.video) {\n      if (publication.video.includes('youtube')) {\n        let id = publication.video.split('?v=')[1]\n        publication.embed = `https://www.youtube.com/embed/${id}`\n      }\n      if (publication.video.includes('vimeo')) {\n        let id = publication.video.split('/')[3]\n        publication.embed = `https://player.vimeo.com/video/${id}`\n      }\n    }\n\n    return (\n      <div>\n        <title>{ `${publication.title} | Interactions Lab | University of Calgary` }</title>\n\n        <Header current=\"Publications\" />\n\n        <div className=\"ui stackable grid\">\n          <div className=\"one wide column\"></div>\n          <div className=\"ten wide column centered\">\n            <div id=\"publication\" className=\"category\">\n              <div id=\"breadcrumb\" className=\"ui breadcrumb\">\n                <a className=\"section\" href=\"/publications\">Publications</a>\n                <i className=\"right angle icon divider\"></i>\n                <a className=\"active section\">{ publication.series }</a>\n              </div>\n              <h1>{ publication.title }</h1>\n              <p className=\"meta\">\n                { publication.authors.map((author) => {\n                    return (\n                      names.includes(author) ?\n                      <a href={ `/people/${ namesId[author] }` }>\n                        <img src={ `/static/images/people/${ namesId[author] }.jpg`} className=\"ui circular spaced image mini-profile\" />\n                        <strong>{author}</strong>\n                      </a>\n                      :\n                      <span>{author}</span>\n                    )\n                  }).reduce((prev, current) => [prev, ' , ', current])\n                }\n              </p>\n            </div>\n            <div className=\"video-container\" style={{ display: publication.embed ? 'block' : 'none' }} >\n              <iframe\n                className=\"embed\"\n                width=\"100%\"\n                height=\"315\"\n                src={`${publication.embed}?`}\n                frameborder=\"0\"\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen={true}\n                mozAllowFullScreen={true}\n                msAllowFullScreen={true}\n                oAllowFullScreen={true}\n                webkitAllowFullScreen={true}\n              ></iframe>\n            </div>\n\n            <div style={{ margin: '50px 0px', fontSize: '1.1em' }}>\n              <h1>Abstract</h1>\n              <p>{ publication.abstract }</p>\n\n              <p>\n                <div class=\"ui labels\">\n                  Keywords: &nbsp;\n                  { publication.keywords.split(', ').map((keyword) => {\n                    return <span className=\"ui large blue label\">{ keyword }</span>\n                  }) }\n                </div>\n              </p>\n            </div>\n\n            <div class=\"ui segment\">\n              <p>\n                { publication.authors.reduce((prev, current) => [prev, ' , ', current]) } <b>{ publication.title }</b>. <i>In Proceedings of the 32nd Annual ACM Symposium on User Interface Software and Technology (UIST '19)</i>. ACM, New York, NY, USA, 1-13. DOI: <a href=\"https://doi.org/10.1145/3332165.3347911\" target=\"_blank\">https://doi.org/10.1145/3332165.3347911</a>\n                }\n              </p>\n            </div>\n\n\n            {/*\n            <ReactMarkdown\n              source={publication.bodyContent}\n              escapeHtml={false}\n              linkTarget=\"_blank\"\n            />\n            */}\n\n          </div>\n          <div className=\"one wide column\"></div>\n        </div>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default Publication\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;;;;AAAA;AAAA;AACA;AACA;;;;;;;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAEA;AAAA;AACA;AAAA;AAAA;AAMA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAeA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAGA;AAAA;AAAA;AACA;AAKA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAKA;;;;AAvGA;;;;;;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAJA;AACA;AA0GA;;;;A","sourceRoot":""}