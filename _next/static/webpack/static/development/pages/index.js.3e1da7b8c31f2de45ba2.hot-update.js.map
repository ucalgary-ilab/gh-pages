{"version":3,"file":"static/webpack/static/development/pages/index.js.3e1da7b8c31f2de45ba2.hot-update.js","sources":["webpack:///./pages/detail.js","webpack:///./pages/header.js","webpack:///./pages/index.js","webpack:///./pages/labs.js","webpack:///./pages/location.js","webpack:///./pages/news.js","webpack:///./pages/people.js","webpack:///./pages/publications.js"],"sourcesContent":["import React from 'react'\n\nclass Detail extends React.Component {\n  constructor(props) {\n    super(props)\n\n    if (!this.props.publication) return\n\n    this.publication = Object.assign({}, this.props.publication)\n    this.people = Object.assign([], this.props.people)\n    this.namesId = Object.assign({}, this.props.namesId)\n\n    this.names = this.people.map((person) => person.name )\n    if (this.publication.base) {\n      this.publication.id = this.publication.base.split('.json')[0]\n    }\n    this.getProceedings()\n    this.getVideoEmbed()\n\n\n    this.showFigures = false\n    if (!this.props.short) {\n      this.getFigures()\n      if (this.figures[this.publication.id]) {\n        this.showFigures = true\n      }\n    }\n  }\n\n  getProceedings() {\n    const conference = this.publication.series.slice(0, -5)\n    const year = this.publication.series.slice(-2)\n    this.proceeding = this.props.booktitles[conference]\n    if (!this.proceeding) {\n      this.proceeding = {}\n    }\n    this.proceeding.series = `${conference} '${year}`\n    if (this.publication.pages < 4) {\n      this.proceeding.booktitle = 'Adjunct ' + this.proceeding.booktitle\n    }\n  }\n\n  getVideoEmbed() {\n    if (this.publication.video) {\n      if (this.publication.video.includes('youtube')) {\n        this.publication.embedId = this.publication.video.split('?v=')[1]\n        this.publication.embed = `https://www.youtube.com/embed/${this.publication.embedId}`\n        this.publication.embedThumbnail = `https://img.youtube.com/vi/${this.publication.embedId}/maxresdefault.jpg`\n      }\n      if (this.publication.video.includes('vimeo')) {\n        this.publication.embedId = this.publication.video.split('/')[3]\n        this.publication.embed = `https://player.vimeo.com/video/${this.publication.embedId}`\n        this.publication.embedThumbnail = this.props.vimeo[this.publication.embedId]\n      }\n    }\n  }\n\n  getFigures() {\n    const dirs =\n    this.props.files.children\n    .filter(dir => dir.name === 'images')[0].children\n    .filter(dir => dir.name === 'publications')[0].children\n    .filter(dir => dir.name === 'figures')[0].children\n\n    this.figures = {}\n    for (let dir of dirs) {\n      let id = dir.name\n      let files = dir.children.map(file => file.path )\n      this.figures[id] = files\n    }\n  }\n\n  render() {\n    if (!this.props.publication) {\n      return <div></div>\n    }\n\n    return (\n      <div id=\"publication\">\n        <div className=\"block\">\n          <div id=\"breadcrumb\" className=\"ui breadcrumb\">\n            <a className=\"section\" href=\"/publications\">Publications</a>\n            <i className=\"right angle icon divider\"></i>\n            <a className=\"active section\">{ this.publication.series }</a>\n          </div>\n          <div className=\"ui stackable grid\" style={{ marginTop: '10px' }}>\n            <div className=\"three wide column\" style={{ margin: 'auto' }}>\n              <img className=\"cover\" src={ `/static/images/publications/cover/${ this.publication.id }.jpg` } />\n            </div>\n            <div className=\"thirteen wide column\">\n              { this.props.short &&\n                <h1>\n                  <a href={ `/publications/${this.publication.id}` } target=\"_blank\">{ this.publication.title }</a>\n                </h1>\n              }\n              { !this.props.short &&\n                <h1>{ this.publication.title }</h1>\n              }\n              <p className=\"meta\">\n                { this.publication.authors.map((author) => {\n                    return (\n                      this.names.includes(author) ?\n                      <a href={ `/people/${ this.namesId[author] }` } key={ author }>\n                        <img src={ `/static/images/people/${ this.namesId[author] }.jpg`} className=\"ui circular spaced image mini-profile\" />\n                        <strong>{author}</strong>\n                      </a>\n                      :\n                      <span key={ author }>{author}</span>\n                    )\n                  }).reduce((prev, current) => [prev, ' , ', current])\n                }\n              </p>\n            </div>\n          </div>\n        </div>\n        { this.publication.embed &&\n          <div className=\"block\">\n            <div className=\"video-container\">\n              <iframe\n                className=\"embed\"\n                width=\"100%\"\n                height=\"315\"\n                src={`${this.publication.embed}`}\n                srcDoc={`<style>*{padding:0;margin:0;overflow:hidden}html,body{height:100%}img,span{position:absolute;width:100%;top:0;bottom:0;margin:auto}span{height:1.5em;text-align:center;font:48px/1.5 sans-serif;color:white;text-shadow:0 0 0.5em black}</style><a href=${this.publication.embed}?autoplay=1><img src=${this.publication.embedThumbnail}><span>â–¶</span></a>`}\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen={true}\n                mozallowfullscreen=\"true\"\n                msallowfullscreen=\"true\"\n                oallowfullscreen=\"true\"\n                webkitallowfullscreen=\"true\"\n              ></iframe>\n            </div>\n          </div>\n        }\n        <div className=\"block\">\n          <h1>Abstract</h1>\n          <p>{ this.publication.abstract }</p>\n\n          { this.publication.keywords &&\n            <div className=\"ui labels\">\n              Keywords: &nbsp;\n              { this.publication.keywords.split(', ').map((keyword) => {\n                return <span className=\"ui large grey label\" key={ keyword }>{ keyword }</span>\n              }) }\n            </div>\n          }\n        </div>\n        <div className=\"block\">\n          <h1>Reference</h1>\n          <div className=\"ui segment\">\n            <p style={{ lineHeight: \"160%\" }}>\n              { this.publication.authors.reduce((prev, current) => [prev, ', ', current]) }.&nbsp;\n              <b>{ this.publication.title }</b>.&nbsp;\n              <i>{ `In ${this.proceeding.booktitle} (${ this.proceeding.series })`  }</i>.&nbsp;\n              { this.proceeding.publisher }&nbsp;\n              Page: 1-{ this.publication.pages }.&nbsp;\n              DOI: <a href={ this.publication.doi} target=\"_blank\">{ this.publication.doi }</a>\n            </p>\n          </div>\n        </div>\n        { this.showFigures &&\n          <div className=\"block\">\n            <h1>Figures</h1>\n            <div id=\"figure\">\n              <div className=\"ui stackable three cards\" style={{ marginTop: '30px' }}>\n                { this.figures[this.publication.id].map((src) => {\n                  return (\n                    <a className=\"card\" href={ `/${src}` } target=\"_blank\" >\n                      <div className=\"image\">\n                        <img src={ `/${src}` } />\n                      </div>\n                    </a>\n                  )\n                })}\n              </div>\n            </div>\n          </div>\n        }\n      </div>\n    )\n  }\n\n}\n\nexport default Detail\n","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.items = [\n      'Publications',\n      'People',\n      'Courses',\n      'Facility',\n      'News',\n      'Location'\n    ]\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"ui right vertical sidebar menu\">\n          <a className=\"item\" href=\"/\">Home</a>\n          { this.items.map((item) => {\n            return (\n              <a className={ this.props.current == item ? 'item active' : 'item' } href={ `/${item.toLowerCase()}` } key={ item }>\n                { item }\n              </a>\n            )\n          })}\n        </div>\n\n        <div className=\"ui stackable secondary pointing container menu\" style={{ borderBottom: 'none', marginRight: '15%', fontSize: '1.1em' }}>\n          <div className=\"left menu\">\n            <a className='item' href='/'>\n              <b style={{ color: '#00716C' }}>UCalgary iLab</b>\n            </a>\n          </div>\n          <div className=\"right menu\">\n            { this.items.map((item) => {\n              return (\n                <a className={ this.props.current == item ? 'item active' : 'item' } href={ `/${item.toLowerCase()}` } key={ item }>\n                  { item }\n                </a>\n              )\n            })}\n            <div className=\"toc item\">\n              <a href=\"/\"><b>UCalgary iLab</b></a>\n              <i style={{ float: 'right' }} className=\"sidebar icon\"></i>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Header","import React from 'react'\n\nimport ReactMarkdown from 'react-markdown'\n\nimport Header from './header'\nimport Labs from './labs'\nimport News from './news'\nimport Publications from './publications'\nimport People from './people'\nimport Location from './location'\nimport Footer from './footer'\n\nclass Index extends React.Component {\n  componentDidMount() {\n  }\n\n  render() {\n\n    return (\n      <div>\n        <title>Interactions Lab | University of Calgary HCI Group</title>\n\n        <Header />\n\n        <div id=\"top-video-container\">\n          <video id=\"top-video\" poster=\"/static/posters/top.png\" preload=\"metadata\" autoPlay loop muted playsInline webkit-playsinline=\"\">\n            <source src=\"/static/videos/top.mp4\" type=\"video/mp4\"></source>\n          </video>\n        </div>\n\n\n        <div className=\"ui stackable grid\">\n          <div className=\"eleven wide column centered\">\n            <div id=\"header-logo\">\n              <div>\n                <img src=\"/static/images/logo-3.png\" style={{ height: '100px' }}/>\n              </div>\n              <div>\n                <img src=\"/static/images/logo-1.png\" style={{ height: '200px', marginTop: '-20px' }}/>\n              </div>\n            </div>\n\n            <div id=\"header\" className=\"category\">\n              <h1>\n                University of Calgary - Interactions Lab\n              </h1>\n              <p>\n                Human-Computer Interaction and Information Visualization Group\n              </p>\n            </div>\n\n            <Labs />\n            <News short=\"true\" />\n            <Publications short=\"true\" />\n            <People short=\"true\" />\n            <Location short=\"true\" />\n          </div>\n        </div>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default Index\n","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport labs from '../content/output/labs.json'\n\nclass Labs extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"ui horizontal divider header\">\n          Research Labs\n        </h1>\n        <div id=\"labs\" className=\"ui stackable four cards\" style={{ textAlign: 'center', marginTop: '15px' }}>\n          { labs.map((lab) => {\n            return (\n              <div className=\"card\" key={ lab.id } style={{ padding: '15px' }}>\n                <a href={ lab.url } target=\"_blank\" className=\"ui \">\n                  <div className=\"img\">\n                  { lab.id !== '' &&\n                    <img src={ `/static/images/labs/${lab.id}.png` } />\n                  }\n                  {\n                    lab.id === '' &&\n                    <img />\n                  }\n                  </div>\n                  <h3>{ lab.description }</h3>\n                  <p className=\"header\">Prof. { lab.prof }</p>\n                </a>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Labs\n","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport files from '../content/output/files.json'\n\nclass Location extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.images =\n      files.children\n      .filter(dir => dir.name === 'images')[0].children\n      .filter(dir => dir.name === 'space')[0].children\n      .map(file => file.path)\n  }\n\n  render() {\n    return (\n      <div id=\"location\" className=\"category\">\n        <h1 className=\"ui horizontal divider header\">\n          <i className=\"map outline icon\"></i>\n          Location\n        </h1>\n        <div id=\"map\" className=\"ui grid\">\n          <div className=\"ten wide column\">\n            <div className=\"feature map\">\n              <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2506.544200524445!2d-114.1279042!3d51.079963549999995!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x53716f0c07993c17%3A0xb8f1352e9e5dfa06!2sMath+Science%2C+Calgary%2C+AB+T2N+4V8%2C+Canada!5e0!3m2!1sen!2sus!4v1439359680603\" frameBorder=\"0\" style={{ border :0 }}></iframe>\n            </div>\n          </div>\n          <div className=\"six wide column\">\n            <div className=\"ui segment\">\n              <h1>Interactions Lab</h1>\n              <p>\n                680 Math Science Building,<br/>\n                University of Calgary<br/>\n                Calgary, AB T2N 4V8, Canada\n              </p>\n            </div>\n          </div>\n        </div>\n        { !this.props.short &&\n          <div id=\"space\" className=\"category\">\n            <h1 className=\"ui horizontal divider header\">\n              <i className=\"map outline icon\"></i>\n              Space\n            </h1>\n            test with example photos\n            <div className=\"ui stackable four cards\" style={{ marginTop: '30px' }}>\n              { this.images.map((src) => {\n                return (\n                  <a className=\"card\" href={ `/${src}` } target=\"_blank\">\n                    <div className=\"image\">\n                      <img src={ `/${src}` }/>\n                    </div>\n                  </a>\n                )\n              })}\n            </div>\n          </div>\n        }\n        { this.props.short &&\n          <div className=\"ui vertical segment stackable\" style={{ textAlign: 'center' }}>\n            <a className=\"ui button\" href=\"/location\">\n              + learn more about our space\n            </a>\n          </div>\n        }\n\n      </div>\n    )\n  }\n}\n\nexport default Location\n","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport news from '../content/output/news.json'\n\nclass News extends React.Component {\n\n  render() {\n    return (\n      <div id=\"news\" className=\"category\">\n        <h1 className=\"ui horizontal divider header\">\n          <i className=\"paper plane outline icon\"></i>\n          News\n        </h1>\n        <div className=\"ui segment\" style={{ marginTop: '50px' }}>\n          <div className=\"ui unstackable divided items\">\n            { news.map((item) => {\n              return (\n                <div className=\"item\" key={ item.date }>\n                  { item.image &&\n                    <div className=\"image\">\n                      <img src={ `/static/images/news/${ item.image}` } style={{ padding: '5px' }} />\n                    </div>\n                  }\n                  { item.icon &&\n                    <div className=\"image\" style={{ margin: 'auto', textAlign: 'center', fontSize: '2.2em', background: '#eee', height: '80px', paddingTop: '20px' }}>\n                      <i className={ `${item.icon} fa-fw` } />\n                    </div>\n                  }\n                  <div className=\"content\">\n                    <div className=\"meta\">\n                      { item.date }\n                    </div>\n                    <div className=\"middle aligned content\">\n                      { item.text }\n                    </div>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n       { this.props.short &&\n          <div className=\"ui vertical segment stackable\" style={{ textAlign: 'center' }}>\n            <a className=\"ui button\" href=\"/news\">\n              { `+ see more updates` }\n            </a>\n          </div>\n       }\n      </div>\n    )\n  }\n}\n\nexport default News\n","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport summary from '../content/output/summary.json'\n\nclass People extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.types = [\n      { key: 'faculty', title: 'Faculty' },\n      { key: 'postdoc', title: 'Post Docs' },\n      { key: 'phd', title: 'PhD Students' },\n      { key: 'master', title: 'Masters Students' },\n      { key: 'undergrad', title: 'Undergrad Students'},\n      { key: 'visiting', title: 'Visiting Researchers' },\n      { key: 'alumni', title: 'Alumni' }\n    ]\n    if (this.props.short) {\n      this.types = this.types.slice(0, 4)\n      // this.types.splice(4, 2)\n    }\n\n    let fileNames = Object.keys(summary.fileMap)\n    let keys = fileNames.filter((fileName) => {\n      return fileName.includes('people')\n    })\n\n    this.people = []\n    for (let key of keys) {\n      let id = key.split('/')[3].replace('.json', '')\n      let person = Object.assign(summary.fileMap[key], { id: id })\n      this.people.push(person)\n    }\n  }\n\n  getTitle(person) {\n    if (person.title) return person\n    switch (person.type) {\n      case 'postdoc':\n        person.title = 'Postdocotral Fellow'\n        break\n      case 'phd':\n        person.title = 'PhD Student'\n        break\n      case 'master':\n        person.title = 'MSc Student'\n        break\n      case 'undergrad':\n        person.title = 'Undergraduate Student'\n        break\n      case 'visiting':\n        person.title = 'Visiting Researcher'\n        break\n      case 'alumni':\n        switch (person.past) {\n          case 'postdoc':\n            person.title = 'Alumni (PostDoc)'\n            break\n          case 'phd':\n            person.title = 'Alumni (PhD)'\n            break\n          case 'master':\n            person.title = 'Alumni (MSc)'\n            break\n          case 'undergrad':\n            person.title = 'Alumni (Undergrad)'\n            break\n          case 'visiting':\n            person.title = 'Alumni (Visiting)'\n            break\n        }\n        break\n    }\n    return person\n  }\n\n  render() {\n    return (\n      <div id=\"people\" className=\"category\">\n        <h1 className=\"ui horizontal divider header\">\n          <i className=\"child icon\"></i>\n          People\n        </h1>\n        { this.types.map((type) => {\n          return (\n            <div className=\"people-category\" key={ type.title }>\n              <h2>{ type.title }</h2>\n              <div className=\"ui grid\">\n                { this.people\n                  .filter((person) => {\n                    return person.type === type.key\n                  }) // filter\n                  .map((person) => {\n                    person = this.getTitle(person)\n                    return (\n                      <a className=\"four wide column person\" href={ `/people/${ person.id }` } key={ person.id }>\n                        <img className=\"ui circular image medium-profile\" src={ `/static/images/people/${ person.id }.jpg`}/>\n                        <p><b>{ person.name }</b></p>\n                        <p>\n                          { person.title }\n                          { person.now &&\n                            <span><br/>{ person.now }</span>\n                          }\n                        </p>\n                      </a>\n                    ) // return\n                  }) // map\n                }\n              </div>\n            </div>\n          )\n        })}\n        { this.props.short &&\n          <div className=\"ui vertical segment stackable\" style={{ textAlign: 'center' }}>\n            <a className=\"ui button\" href=\"/people\">\n              + see more members\n            </a>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default People\n","import React from 'react'\nimport Detail from './detail'\nimport summary from '../content/output/summary.json'\nimport booktitles from '../content/output/booktitles.json'\nimport files from '../content/output/files.json'\nimport vimeo from '../content/output/vimeo.json'\n\nclass Publications extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      publication: null\n    }\n\n    this.getPublications()\n    this.getPeople()\n\n    if (this.props.short) {\n      this.publications = this.publications.slice(0, 20)\n    }\n    if (this.props.author) {\n      this.publications = this.publications.filter((publication) => {\n        return publication.authors.includes(this.props.author)\n      })\n    }\n  }\n\n  getPublications() {\n    const fileNames = Object.keys(summary.fileMap)\n    const keys = fileNames.filter((fileName) => {\n      return fileName.includes('publications')\n    })\n\n    this.publications = []\n    for (let key of keys) {\n      this.publications.push(summary.fileMap[key])\n    }\n    this.publications = this.publications.sort((a, b) => {\n      return new Date(b.date) - new Date(a.date)\n    })\n  }\n\n  getPeople() {\n    const fileNames = Object.keys(summary.fileMap)\n    const keys = fileNames.filter((fileName) => {\n      return fileName.includes('people')\n    })\n\n    this.people = []\n    for (let key of keys) {\n      let id = key.split('/')[3].replace('.json', '')\n      let person = Object.assign(summary.fileMap[key], { id: id })\n      this.people.push(person)\n    }\n\n    this.names = this.people.map((person) => person.name )\n    this.namesId = {}\n    for (let person of this.people) {\n      this.namesId[person.name] = person.id\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"publications\" className=\"category\">\n        <h1 className=\"ui horizontal divider header\">\n          <i className=\"file alternate outline icon\"></i>\n          { this.props.short ? 'Recent Publications' : 'Publications' }\n        </h1>\n        <div className=\"ui segment\" style={{ marginTop: '50px' }}>\n         { this.publications.map((publication, i) => {\n            publication.id = publication.base.split('.json')[0]\n            return (\n              <div className=\"publication ui vertical segment stackable grid\" data-id={ publication.id } key={ i }>\n                <div className=\"three wide column\" style={{ margin: 'auto' }}>\n                  <img className=\"cover\" src={ `/static/images/publications/cover/${publication.id}.jpg` } />\n                </div>\n                <div className=\"thirteen wide column\">\n                  <p>\n                    <span className=\"ui big inverted teal label\">{ publication.series }</span>\n                    { publication.award &&\n                      <span className=\"ui big label\">\n                      { publication.award === 'Honorable Mention' &&\n                        <b><i className=\"fas fa-award\"></i> Honorable Mention</b>\n                      }\n                      { publication.award === 'Best Paper' &&\n                        <b><i className=\"fas fa-trophy\"></i> Best Paper</b>\n                      }\n                      </span>\n                    }\n                  </p>\n                  <p style={{ fontSize: '1.3em', color: '#00716C' }}>\n                      <b>\n                        { publication.title }\n                      </b>\n                  </p>\n                  <p>\n                    { publication.authors.map((author) => {\n                        return (\n                          this.names.includes(author) ?\n                          <a href={ `/people/${ this.namesId[author] }` } key={ author }>\n                            <img src={ `/static/images/people/${ this.namesId[author] }.jpg`} className=\"ui circular spaced image mini-profile\" />\n                            <span className=\"author-link\">{author}</span>\n                          </a>\n                          :\n                          <span key={ author }>{author}</span>\n                        )\n                      }).reduce((prev, current) => [prev, ' , ', current])\n                    }\n                  </p>\n                </div>\n              </div>\n            ) // publications\n         })}\n        </div>\n\n        <div id=\"publications-modal\">\n         { this.publications.map((publication, i) => {\n            publication.id = publication.base.split('.json')[0]\n            return (\n              <div id={publication.id} className=\"ui large modal\" key={ publication.id }>\n                <div className=\"header\">\n                  <a href={ `/publications/${publication.id}` } target=\"_blank\">\n                    <i className=\"fas fa-link fa-fw\"></i>{`${publication.id}`}\n                  </a>\n                  &nbsp;&nbsp;-&nbsp;&nbsp;\n                  <a href={ `/publications/${publication.id}.pdf` } target=\"_blank\">\n                    <i className=\"far fa-file-pdf fa-fw\"></i> pdf\n                  </a>\n                  <div className=\"actions\" style={{ float: 'right', cursor: 'pointer', color: 'grey' }}>\n                    <i className=\"ui right cancel close icon\">\n                    </i>\n                  </div>\n                </div>\n                <div className=\"content\">\n                  <Detail\n                    publication={ publication }\n                    namesId={ this.namesId }\n                    people={ this.people }\n                    booktitles={ booktitles }\n                    files={ files }\n                    vimeo={ vimeo }\n                    short=\"true\"\n                  />\n                </div>\n                <div className=\"actions\">\n                  <div className=\"ui right cancel button\">\n                    Close\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n\n\n        { this.props.short &&\n          <div className=\"ui vertical segment stackable\" style={{ textAlign: 'center' }}>\n            <a className=\"ui button\" href=\"/publications\">\n              { `+ ${this.publications.length} more publications` }\n            </a>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default Publications\n"],"mappings":"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","sourceRoot":""}